unbind C-b
set -g prefix C-b

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

# set activity monitor
setw -g monitor-activity on
set -g visual-activity on

#highlight the current window using specified color
#set-window-option -g window-status-current-bg red

# pull in the development environment
bind D source-file ~/.tmux/dev

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# rebind splits to - and |
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# use vim keybindings in tmux copy-mode
bind P paste-buffer
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# use shorter escape key recognition time for neovim compat
set-option -s escape-time 10

set-option -g focus-events on

set-option -g default-terminal "screen-256color"

# set-option -sa terminal-overrides ",$TERM:RGB"
