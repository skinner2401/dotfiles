-- this isnt even being loaded


--local cmp = require('cmp')
--local luasnip = require('luasnip')
--
--cmp.setup({
--  snippet = {
--    --expand = function(args)
--    --  require('luasnip').lsp_expand(args.body) -- For `luasnip` users.
--    --end,
--  },
--
--  completion = {
--    completeopt = 'menu,menuone,noselect',
--  },
--
--  mapping = {
--    ['<C-p>'] = cmp.mapping.select_prev_item(),
--    ['<C-n>'] = cmp.mapping.select_next_item(),
--    ['<C-b>'] = cmp.mapping(cmp.mapping.scroll_docs(-4), { 'i', 'c' }),
--    ['<C-f>'] = cmp.mapping(cmp.mapping.scroll_docs(4), { 'i', 'c' }),
--    ['<C-Space>'] = cmp.mapping(cmp.mapping.complete(), { 'i', 'c' }),
--    ['<C-y>'] = cmp.config.disable, -- Specify `cmp.config.disable` if you want to remove the default `<C-y>` mapping.
--    ['<C-e>'] = cmp.mapping({
--      i = cmp.mapping.abort(),
--      c = cmp.mapping.close(),
--    }),
--  ["<CR>"] = cmp.mapping.confirm({
--      behavior = cmp.ConfirmBehavior.Replace,
--      select = true,
--    }),
--    ['<Down>'] = function(fallback)
--      if cmp.visible() then
--        cmp.select_next_item()
--      elseif luasnip.expand_or_jumpable() then
--        luasnip.expand_or_jump()
--      else
--        fallback()
--      end
--    end,
--    ['<Up>'] = function(fallback)
--      if cmp.visible() then
--        cmp.select_prev_item()
--      elseif luasnip.jumpable(-1) then
--        luasnip.jump(-1)
--      else
--        fallback()
--      end
--    end,
--  },
--
--  sources = cmp.config.sources({
--    { name = 'nvim_lsp' },
--    { name = 'luasnip' }, -- For luasnip users.
--    { name = 'path' },
--  }, {
--    { name = 'buffer' },
--  })
--})
